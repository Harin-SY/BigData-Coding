return과 print의 차이

1) "파라미터 X의 합을 출력해 주는 함수"
 def print_sum(x):   -> x : 5
     print(x + x)      -> x + x = 10 출력

print_sum(5)     -> 함수 호출


2) "파라미터 X의 합을 리턴해 주는 함수" 
 def get_sum(x):     -> x : 5
     return(x + x)    -> x + x = 10
 
get_sum(5) -> 함수 호출 = 10
               -> 10으로 대체가 되었지만 프린트하라는 명령이 없어서 함수가 종료됨
 * 10을 출력하고 싶을 경우에는
"print(get_sum(5))"를 이용하여 함수를 호출하면 된다.

3)
  def print_sum(x):   -> x : 5
     print(x + x)      -> x + x = 10 출력

print(print_sum(5)     -> 함수 호출

* 함수에 "print" 명령어가 존재하기 때문에 처음에 출력값인 "10"이 출력된다.
python에서 "print" 명령어를 함수를 호출하는데 사용할 경우
함수 안에 "return"이라는 명령어가 존재하지 않을 경우 "None"을 출력하게 된다.
따라서 위의 함수와 호출 결과는
함수안에 "print"라는 명령어를 통해 "10"이 출력되고
그 후, "print"라는 명령어는 함수안에 "return"이라는 명령어가 없어서 "None"을 출력하게 된다.
-> 10
     None


옵셔널 파라미터
-> 파라미터의 기본값을 설정하면 함수를 호출할 때 파라미터의 해당되는 값을
    넘겨주지 않을 경우 기본으로 설정한 값을 사용하게 되는데 이러한 경우를
    "Optional Parameter"라고 말한다.

    def introduce(name, age, nationality = "대한민국"):
        print("내 이름은 %s", %name)
        print("나이는 %d살", %age)
        print("국적은 %s" %nationality)

introduce("하린", 31)
introduce("노출구, 30, "한국")

->내 이름은 하린
   나이는 31살
   국적은 대한민국
   내 이름은 노출구
   나이는 30살
   국적은 한국
 * introduce("하린", 31) -> 국적을 설정하진 않았지만 파라미터에 기본값을
                                   설정했기 때문에 자동으로 "대한민국"이 출력됨

