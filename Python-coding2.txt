<여러개의 파라미터>
def sum_print(a, b):
    print(a + b)

sum_print(5, 2)

-> 지금은 2개의 파라미터를 받고 싶을 경우에는
   sum_print(a, b, c):로 처리하면 된다.
* 변수처럼 파라미터의 이름을 자유롭게 지정할 수 있다.

변수 : 값을 저장해 주는 것
함수 : 명령을 저장해 주는 것
파라미터 : 함수에 넘겨주는 값

<return> : 값을 돌려준다.
예제1)
def print_sum(a):       1) print_sum에 2의 값이 입력된다. 
    return a + a         2) 2+2의 값인 4가 된다.

print(print_sum(2))    3) print_sum의 값이 4가 되어 4를 출력한다.

예제2)
def print_sum(a):                          1) print_sum에 3의 값이 입력된다.  4) print_sum에 5의 값이 입력된다.
    return a + a                            2) 3 + 3으로 6이 된다.                 5) 5 + 5으로 10이 된다.

print(print_sum(3) + print_sum(5))   3) 6 + print_sum(5)가 남았다.        6) 6 + 10의 값인 16이 출력된다.

<정수형 연산>
#덧셈
print(1 + 3)
-> 4

#뺄셈
print(5 - 2)
-> 3

#곱셈
print(5 * 4)
-> 20

#나머지
print(10 % 3)
-> 1

#거듭제곱
print(3 ** 2)
-> 9

정수형 + 정수형 = 정수형
정수형 + 소수형 = 소수형
소수형 + 소수형 = 소수형
#파이썬에서는 정수형보다는 소수형에 우선순위가 있다.
  나눗셈은 무조건 "소수형"의 형태로 값이 출력된다.
 (형 변환을 통해 나눗셈의 값을 정수형으로 출력할 수도 있다.)

파이썬의 계산도 사칙연산을 따른다.
#round(반올림)
print(round(4.567890)
-> 5
print(round(4.567890, 2) -> 소숫점 2번째에서 반올림
-> 4.6

#floor division(버림 나눗셈)
print(5 // 2) 나눈 결과 값에서 소수값을 제외한다.
-> 2

print(5.0 // 2)
-> 2.0
print(5 // 2.0)
-> 2.0
버림 나눗셈을 할 때, 둘 중에 하나라도 소수형일 경우 소수형의 값이 나온다.


